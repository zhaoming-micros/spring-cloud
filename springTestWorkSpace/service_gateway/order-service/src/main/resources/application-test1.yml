server:
  port: 8762

eureka:
  client:

    serviceUrl:
      defaultZone: http://192.168.0.110:8761/eureka/

logging:
  config: classpath:log4j2.xml

spring:
  application:
    name: order-service
  
  kafka:
    # Kafka服务端监听地址端口，集群用逗号分隔
    bootstrap-servers: 192.168.0.110:9092,192.168.0.110:9093,192.168.0.110:9094
    
    consumer:
      # 消费者组ID，在消费者实例没有指定消费者组的时候生效
      group-id: test01
      # 如果为真，consumer所fetch的消息的offset将会自动的同步到zookeeper。
      enable-auto-commit: true
      # 每次自动提交offset的时间间隔，当enable-auto-commit设置为true时生效，默认值为5000，单位ms. 自动提交才需要配置
      auto-commit-interval: 1000
      # kafka服务（实际是zookeeper）中没有初始化的offset时，如果offset是以下值的回应：
      # earliest：自动复位offset为smallest的offset
      # latest：自动复位offset为largest的offset
      # anything  else：向consumer抛出异常
      # none：如果整个消费者组中没有以往的offset，则抛出异常
      auto-offset-reset: earliest
      # message的key的解码类
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      # message的value的解码类
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      # 单次消费获取数据的最大条数
      max-poll-records: 500
    
   