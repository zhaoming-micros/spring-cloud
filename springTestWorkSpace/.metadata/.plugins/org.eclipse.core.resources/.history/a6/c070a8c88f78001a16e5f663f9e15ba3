package com.chasepay.zuul.filter;

import java.util.HashMap;
import java.util.Map;

import javax.servlet.http.Cookie;
import javax.servlet.http.HttpServletRequest;

import com.netflix.zuul.ZuulFilter;
import com.netflix.zuul.context.RequestContext;
import com.netflix.zuul.exception.ZuulException;

public class AuthorityFilter extends ZuulFilter{

	@Override
	public Object run() throws ZuulException {
		RequestContext currentContext = RequestContext.getCurrentContext();
		HttpServletRequest request = currentContext.getRequest();
		request.getCookies()
		return null;
	}

	@Override
	public boolean shouldFilter() {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public int filterOrder() {
		// TODO Auto-generated method stub
		return -1;
	}

	@Override
	public String filterType() {
		// TODO Auto-generated method stub
		return "pre";
	}
	
	
	private Map<String,String> getCookiesMap(HttpServletRequest request)
	{
		Map<String,String> map = new HashMap<String, String>();
		Cookie[] cookies = request.getCookies();
		for(int i=0;i<cookies.length;i++)
		{
			map.put(cookies[i].getName(), cookies[i].getValue());
		}
		return map;
	}
	
	
	private String getCookieByKey(HttpServletRequest request,String key)
	{
		Cookie[] cookies = request.getCookies();
		for(int i=0;i<cookies.length;i++)
		{
			String name = cookies[i].getName();
			if(key.equals(name))
			{
				return cookies[i].getValue();
			}
		}
		return null;
	}

}
